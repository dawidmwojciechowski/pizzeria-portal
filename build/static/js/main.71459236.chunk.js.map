{"version":3,"sources":["components/views/Login/Login.module.scss","components/views/Waiter/Waiter.module.scss","components/layout/PageNav/PageNav.js","components/layout/MainLayout/MainLayout.js","components/views/Login/Login.js","components/features/Switch/Switch.js","settings.js","redux/kitchenRedux.js","components/views/Kitchen/Kitchen.js","utils.js","redux/bookingRedux.js","components/views/Table/Table.js","components/views/Waiter/Waiter.js","redux/tablesRedux.js","components/views/Waiter/WaiterContainer.js","components/views/Homepage/Homepage.js","components/views/Booking/Booking.js","components/views/Events/Events.js","components/views/Order/Order.js","redux/store.js","App.js","reportWebVitals.js","index.js","components/views/Table/Table.module.scss","components/layout/PageNav/PageNav.module.scss"],"names":["module","exports","PageNav","className","styles","component","Button","link","NavLink","exact","to","process","activeClassName","MainLayout","children","AppBar","Container","maxWidth","Toolbar","disableGutters","Login","props","state","username","password","authflag","handleChange","bind","handleSubmit","event","this","setState","preventDefault","history","push","Grid","container","spacing","justify","direction","item","loginForm","Paper","variant","elevation","loginBackground","Typography","onSubmit","TextField","type","placeholder","fullWidth","name","value","onChange","target","required","autoFocus","color","buttonBlock","Link","href","React","Component","SwitchChanger","useState","switchState","setSwitchState","FormControlLabel","control","Switch","checked","label","api","url","window","location","hostname","table","products","order","booking","dishes","dateStartParamKey","dateEndParamKey","notRepeatParam","repeatParam","createActionName","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","fetchSuccess","payload","fetchError","useRowStyles","makeStyles","root","borderBottom","createData","dish","orderNumber","clientType","status","price","date","customerId","amount","Row","row","open","setOpen","classes","dispatch","useDispatch","useSelector","data","console","log","useEffect","a","fetchStarted","Axios","get","dishesData","message","Fragment","TableRow","TableCell","IconButton","aria-label","size","onClick","scope","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","gutterBottom","Table","TableHead","TableBody","map","historyRow","Math","round","rows","CollapsibleTable","TableContainer","dateToStr","dateObj","toISOString","slice","addDays","dateStr","days","Date","setDate","getDate","numberToHour","number","floor","padStart","hourToNumber","hour","parts","split","parseInt","TableView","startDate","setStartDate","bookings","day","getState","bookingData","eventData","eventsNoRepeat","filter","repeat","eventsRepeat","today","i","currentDate","hourNumber","duration","orderedBookings","renderActions","hourBooking","find","id","datepicker","selected","tableRow","Object","keys","Waiter","fetchTables","changeTableStatus","renderStatus","loading","active","error","tables","length","CHANGE_TABLE_STATUS","fetchFromAPI","then","res","catch","err","tableChange","put","connect","Homepage","Booking","Events","Order","initialState","reducers","statePart","action","newStatePart","forEach","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","secondary","App","StylesProvider","injectFirst","ThemeProvider","path","Kitchen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71459236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__26j3C\",\"buttonBlock\":\"Login_buttonBlock__vV_hT\",\"loginBackground\":\"Login_loginBackground__3czVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Waiter_component__1AduK\",\"row\":\"Waiter_row__217vo\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport styles from './PageNav.module.scss';\n\nconst PageNav = () => {\n  return ( \n    <nav className={styles.component}>\n      <Button className={styles.link} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Logo to hompage</Button>\n      <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/login`} activeClassName='active'>Login</Button>\n      <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/table`} activeClassName='active'>Table</Button>\n      <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/waiter`} activeClassName='active'>Waiter</Button>\n      <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/kitchen`} activeClassName='active'>Kitchen</Button>\n    </nav>\n  );\n};\n\nexport default PageNav;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageNav from '../PageNav/PageNav';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\n\nconst MainLayout = ( {children} ) => {\n  return (\n    <div>\n      <AppBar>\n        <Container maxWidth='lg'>\n          <Toolbar disableGutters>\n            <PageNav />\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Container maxWidth='lg'>\n        <Toolbar />\n        {children}\n      </Container>\n    </div>\n  );\n};\n\n\nMainLayout.propTypes = {\n  children: PropTypes.node,\n};\n\n\nexport default MainLayout;","import React from 'react';\nimport {\n  Button,\n  TextField,\n  Grid,\n  Paper,\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport styles from './Login.module.scss';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password:'', authflag:1 };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  static propTypes = {\n    history: PropTypes.node,\n  }\n\n  handleChange(event) {\n    this.setState({ username: event.state.username, password: event.state.password });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.history.push('/panel');\n  }\n  \n  render() {\n    return (\n      <div>\n        <Grid container spacing={0} justify=\"center\" direction=\"row\">\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              spacing={2}\n              className={styles.loginForm}\n            >\n              <Paper\n                variant=\"elevation\"\n                elevation={2}\n                className={styles.loginBackground}\n              >\n                <Grid item>\n                  <Typography component=\"h1\" variant=\"h5\">\nSign in\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <form onSubmit={this.handleSubmit}>\n                    <Grid container direction=\"column\" spacing={2}>\n                      <Grid item>\n                        <TextField\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          fullWidth\n                          name=\"username\"\n                          variant=\"outlined\"\n                          value={this.state.username}\n                          onChange={(event) =>\n                            this.setState({\n                              [event.target.name]: event.target.value,\n                            })\n                          }\n                          required\n                          autoFocus\n                        />\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          fullWidth\n                          name=\"password\"\n                          variant=\"outlined\"\n                          value={this.state.password}\n                          onChange={(event) =>\n                            this.setState({\n                              [event.target.name]: event.target.value,\n                            })\n                          }\n                          required\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          type=\"submit\"\n                          className={styles.buttonBlock}\n                        >\nSubmit\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </Grid>\n                <Grid item>\n                  <Link href=\"#\" variant=\"body2\">\nForgot Password?\n                  </Link>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst SwitchChanger = () => {\n  const [switchState, setSwitchState] = useState(false);\n  const handleStatus = () => {setSwitchState(!switchState);\n  };\n  return (\n    <FormControlLabel\n      control={<Switch checked={switchState} onChange={handleStatus} name='prepared'/>}\n      label=\"DONE\"\n    />\n  );\n};\n\nexport default SwitchChanger;","export const api = {\n  url: '//' + window.location.hostname + (window.location.hostname==='localhost' ? ':3131' : ''),\n  table: 'table',\n  products: 'products',\n  order: 'order',\n  booking: 'booking',\n  dishes: 'dishes',\n  event: 'event',\n  dateStartParamKey: 'date_gte',\n  dateEndParamKey: 'date_lte',\n  notRepeatParam: 'repeat=false',\n  repeatParam: 'repeat_ne=false',\n};","import Axios from 'axios';\nimport { api } from '../settings';\n//import {dateToStr, addDays, numberToHour, hourToNumber } from '../utils';\n/* selectors */\nexport const getLoadingState = ({dishes}) => dishes.loading;\n\n/* action name creator */\nconst reducerName = 'dishes';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n/* thunk creators */\n\nexport const fetchFromAPI = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchStarted());\n      const dishesData = await Axios.get(`${api.url}/api/${api.dishes}`);\n      \n      dispatch(fetchSuccess(dishesData.data));\n    }\n    catch(err){\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n\n\n/* reducer */\n\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n}","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport SwitchChanger from '../../features/Switch/Switch';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFromAPI } from '../../../redux/kitchenRedux';\n\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction createData(dish, orderNumber, clientType, status, price) {\n  return {\n    dish,\n    orderNumber,\n    clientType,\n    status,\n    price,\n    history: [\n      { date: '2020-01-05', customerId: '11091700', amount: 1 },\n    ],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  const dispatch = useDispatch();\n  const dishes = useSelector(state => state.dishes.data);\n\n  if(dishes) {\n    console.log(dishes);\n  }\n\n  useEffect(() => {\n    dispatch(fetchFromAPI());\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.dish}\n        </TableCell>\n        <TableCell align=\"right\">{row.orderNumber}</TableCell>\n        <TableCell align=\"right\">{row.clientType}</TableCell>\n        <TableCell align=\"right\">{row.status}</TableCell>\n        <TableCell align=\"right\">{row.price}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    dish: PropTypes.string.isRequired,\n    orderNumber: PropTypes.number.isRequired,\n    clientType: PropTypes.string.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    price: PropTypes.number.isRequired,\n    status: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst rows = [\n  createData('Pizza 1', 159, 'IN', <SwitchChanger/>, 3.99),\n  createData('Pizza 1', 159, 'IN', <SwitchChanger/>, 3.99),\n  createData('Pizza 1', 159, 'IN', <SwitchChanger/>, 3.99),\n  createData('Pizza 1', 159, 'IN', <SwitchChanger/>, 3.99),\n  createData('Pizza 1', 159, 'IN', <SwitchChanger/>, 3.99),\n];\n\n\nexport default function CollapsibleTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Dish</TableCell>\n            <TableCell align=\"right\">Order number</TableCell>\n            <TableCell align=\"right\">Client type(In/Out)</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","export const dateToStr = function(dateObj){\n  return dateObj.toISOString().slice(0, 10);\n};\n  \nexport const addDays = function(dateStr, days){\n  const dateObj = new Date(dateStr);\n  dateObj.setDate(dateObj.getDate() + days);\n  return dateObj;\n};\n\nexport const numberToHour = function(number){\n  return (Math.floor(number) % 24) + ':' + (number % 1 * 60 + '').padStart(2, '0');\n};\n  \nexport const hourToNumber = function(hour){\n  const parts = hour.split(':');\n  \n  return parseInt(parts[0]) + parseInt(parts[1])/60;\n};","import Axios from 'axios';\nimport { api } from '../settings';\nimport {dateToStr, addDays, numberToHour, hourToNumber } from '../utils';\n/* selectors */\nexport const getAll = ({bookings}) => bookings.data;\nexport const getLoadingState = ({bookings}) => bookings.loading;\nexport const getBookingsForDate = ({bookings}, day) => bookings.data[day]\n\n/* action name creator */\nconst reducerName = 'bookings';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\n/* thunk creators */\n\nexport const fetchFromAPI = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(fetchStarted());\n      const bookingData = await Axios.get(`${api.url}/api/${api.booking}`);\n      const eventData = await Axios.get(`${api.url}/api/${api.event}`); \n      const eventsNoRepeat = eventData.data.filter(event => event.repeat === false);\n      const bookings = [...bookingData.data, ...eventsNoRepeat];\n\n      const eventsRepeat = eventData.data.filter(event => event.repeat === 'daily');\n      for (let event of eventsRepeat) {\n        let today = dateToStr(new Date());\n        for (let i = 0; i < 14; i++) {\n          const currentDate = dateToStr(addDays(today, i));\n          bookings.push({\n            ...event,\n            date: currentDate,\n          });\n          const hourNumber = hourToNumber(event.hour);\n\n          for(let i = hourNumber; i < hourNumber + event.duration; i += 0.5) {\n            bookings.push({\n              ...event,\n              hour: numberToHour(i),\n              date: currentDate,\n            });\n          }\n        }\n      }\n      const orderedBookings = {};\n      let today = dateToStr(new Date());\n      for (let i = 0; i < 14; i++) {\n        const currentDate = dateToStr(addDays(today, i));\n        orderedBookings[currentDate] = {};\n        for(let i = 12; i < 20; i += 0.5) {\n          orderedBookings[currentDate][i] = bookings.filter(booking => {\n            return booking.date === currentDate && booking.hour === numberToHour(i);\n          });\n        }\n      }\n      dispatch(fetchSuccess(orderedBookings));\n    }\n    catch(err){\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n\n\n/* reducer */\n\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './Table.module.scss';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\n// eslint-disable-next-line no-unused-vars\nimport { CgEventbrite } from 'react-icons/cg';\nimport { RiReservedFill, RiReservedLine } from 'react-icons/ri';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Link } from 'react-router-dom';\nimport { dateToStr, numberToHour } from '../../../utils';\n// eslint-disable-next-line no-unused-vars\nimport { fetchFromAPI, getAll, getBookingsForDate } from '../../../redux/bookingRedux';\n\n\nconst TableView = () => {\n  const [startDate, setStartDate] = useState(new Date());\n  const dispatch = useDispatch();\n  const bookings = useSelector((state) => {\n    return getBookingsForDate(state, dateToStr(startDate));});\n\n  useEffect(() => {\n    dispatch(fetchFromAPI());\n  }, []);\n\n  const renderActions = (table, hour) => {\n    const hourBooking = bookings[hour].find((booking) => booking.table === table);\n    if(!hourBooking) {\n      return (\n        <Button component={Link} to={`${process.env.PUBLIC_URL}/table/booking/new`}><RiReservedLine/>Free</Button>\n      );\n    } else {\n      return (\n        <Button component={Link} to={`${process.env.PUBLIC_URL}/table/booking/${hourBooking.id}`}><RiReservedFill/>Booked </Button>\n      );\n    }\n  };\n\n  const renderBody = () => {\n    return bookings ?\n      (<TableBody>\n        {Object.keys(bookings).map((hour) => (\n          <TableRow key={hour}>\n            <TableCell component='td'>{numberToHour(hour)}</TableCell>\n            {[1,2,3].map((table) => (\n              <TableCell key={table}>\n                {renderActions(table, hour)}\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n      ) : (null);\n  };\n\n  return (\n    <div className={styles.component}>\n      <div className={styles.datepicker}>\n        <DatePicker selected={startDate} onChange={date => {\n          setStartDate(date);\n        }} />\n      </div>\n      <Paper>\n        <Table>\n          <TableHead component='thead'>\n            <TableRow className={styles.tableRow}>\n              <TableCell component='td' className={styles.table}>Hours</TableCell>\n              <TableCell component='td' className={styles.table}>Table 1 </TableCell>\n              <TableCell component='td' className={styles.table}>Table 2 </TableCell>\n              <TableCell component='td' className={styles.table}>Table 3 </TableCell>\n            </TableRow>\n          </TableHead>\n          {renderBody()}\n        </Table>\n      </Paper>\n    </div>\n\n  );\n/*\n  return (\n\n  */\n};\n\nexport default TableView;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-self-assign */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Waiter.module.scss';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nclass Waiter extends React.Component {\n  static propTypes = {\n    fetchTables: PropTypes.func,\n    changeTableStatus: PropTypes.func,\n    tables: PropTypes.array,\n    loading: PropTypes.shape({\n      active: PropTypes.bool,\n      error: PropTypes.node,\n    }),\n  }\n\n  componentDidMount(){\n    const { fetchTables } = this.props;\n    fetchTables();\n  }\n\n  renderStatus(id, status, order){\n    const {changeTableStatus} = this.props;\n    switch (status) {\n      case 'free':\n        status = 'thinking';\n        order = order;\n        changeTableStatus(id, status, order);\n        break;\n      case 'thinking':\n        status = 'ordered';\n        order = order;\n        changeTableStatus(id, status, order);\n        break;\n      case 'ordered':\n        status = 'prepared';\n        order = order;\n        changeTableStatus(id, status, order);\n        break;\n      case 'prepared':\n        status = 'delivered';\n        order = order;\n        changeTableStatus(id, status, order);\n        break;\n      case 'delivered':\n        status = 'paid';\n        order = order;\n        changeTableStatus(id, status, order);\n        break;\n      case 'paid':\n        break;\n      default:\n        return null;\n    }\n  }\n\n  renderActions(row){\n    let id  = row.id;\n    let status = row.status;\n    let order = row.order;\n\n    switch (status) {\n      case 'free':\n        return (\n          <>\n            <Button onClick={() => this.renderStatus(id, status, order)}>thinking</Button>\n            <Button onClick={() => this.renderStatus(id, status, order)}>new order</Button>\n          </>\n        );\n      case 'thinking':\n        return (\n          <Button onClick={() => this.renderStatus(id, status, order)}>new order</Button>\n        );\n      case 'ordered':\n        return (\n          <Button onClick={() => this.renderStatus(id, status, order)}>prepared</Button>\n        );\n      case 'prepared':\n        return (\n          <Button onClick={() => this.renderStatus(id, status, order)}>delivered</Button>\n        );\n      case 'delivered':\n        return (\n          <Button onClick={() => this.renderStatus(id, status, order)}>paid</Button>\n\n        );\n      case 'paid':\n        return (\n          <Button onClick={() => this.renderStatus(id, status, order)}>free</Button>\n        );\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { loading: { active, error }, tables, changeTableStatus } = this.props;\n\n    if(active || !tables.length){\n      return (\n        <Paper className={styles.component}>\n          <p>Loading...</p>\n        </Paper>\n      );\n    } else if(error) {\n      return (\n        <Paper className={styles.component}>\n          <p>Error! Details:</p>\n          <pre>{error}</pre>\n        </Paper>\n      );\n    } else {\n      return (\n        <Paper className={styles.component}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Table</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Order</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tables.map(row => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>\n                    {row.status}\n                  </TableCell>\n                  <TableCell>\n                    {row.order && (\n                      <Button to={`${process.env.PUBLIC_URL}/waiter/order/${row.order}`}>\n                        {row.order}\n                      </Button>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {this.renderActions(row)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n    }\n  }\n}\n\nexport default Waiter;\n","import Axios from 'axios';\nimport { api } from '../settings';\n/* selectors */\nexport const getAll = ({tables}) => tables.data;\nexport const getLoadingState = ({tables}) => tables.loading;\n\n/* action name creator */\nconst reducerName = 'tables';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst CHANGE_TABLE_STATUS = createActionName('CHANGE_TABLE_STATUS');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const fetchChange = payload => ({ payload, type: CHANGE_TABLE_STATUS});\n/* thunk creators */\n\nexport const fetchFromAPI = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`${api.url}/api/${api.table}`)\n      .then(res => {\n        dispatch(fetchSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const tableChange = (id, status, order) => {\n  return (dispatch, getState) => {\n\n    Axios\n      .put(`${api.url}/api/${api.table}/${id}`, {status: status, order: order})\n      .then(res => {\n        dispatch(fetchChange(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\n/* reducer */\n\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case CHANGE_TABLE_STATUS: {\n      const newStatePart = statePart.data.map((table) => {\n        if(table.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return table;\n        }\n      });\n      return {\n        ...statePart,\n        data: newStatePart, \n      };\n    }\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n}","import { connect } from 'react-redux';\nimport Waiter from './Waiter';\nimport { getAll, fetchFromAPI, getLoadingState, tableChange } from '../../../redux/tablesRedux';\n\nconst mapStateToProps = (state) => ({\n  tables: getAll(state),\n  loading: getLoadingState(state),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    fetchTables: () => dispatch(fetchFromAPI()),\n    changeTableStatus: (id, status, order) => dispatch(tableChange(id, status, order)),\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Waiter);","import React from 'react';\nimport styles from './Homepage.module.scss';\n\n\nconst Homepage = () => {\n  return (\n    <div className={styles.component}>\n      <h2>Homepage view</h2>\n    </div>\n  );\n};\n\nexport default Homepage;","import React from 'react';\nimport styles from './Booking.module.scss';\n\n\nconst Booking = () => {\n  return (\n    <div className={styles.component}>\n      <h2>Booking</h2>\n    </div>\n  );\n};\n\nexport default Booking;","import React from 'react';\nimport styles from './Events.module.scss';\n\n\nconst Events = () => {\n  return (\n    <div className={styles.component}>\n      <h2>Event</h2>\n    </div>\n  );\n};\n\nexport default Events;","import React from 'react';\nimport styles from './Order.module.scss';\n\nconst Order = () => {\n  return (\n    <div className={styles.component}>\n      <h2>Order</h2>\n    </div>\n  );\n};\n\nexport default Order;","import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport tablesReducer from './tablesRedux';\nimport bookingReducer from './bookingRedux';\nimport dishesReducer from './kitchenRedux';\n\n// define initial state and shallow-merge initial data\nconst initialState = {\n  tables: {\n    data: {},\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n  bookings: {\n    data: {},\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n\n  dishes: {\n    data: {},\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n};\n\n// define reducers\nconst reducers = {\n  tables: tablesReducer,\n  bookings: bookingReducer,\n  dishes: dishesReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nconst store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;","import React from 'react';\nimport MainLayout from './components/layout/MainLayout/MainLayout';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './components/views/Login/Login';\nimport Kitchen from './components/views/Kitchen/Kitchen';\nimport Table from './components/views/Table/Table';\nimport Waiter from './components/views/Waiter/WaiterContainer';\nimport Homepage from './components/views/Homepage/Homepage';\nimport Booking from './components/views/Booking/Booking';\nimport Events from './components/views/Events/Events';\nimport Order from './components/views/Order/Order';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#115293',\n    },\n    secondary: {\n      main: '#11cb5f',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <StylesProvider injectFirst>\n            <ThemeProvider theme={theme}>\n              <MainLayout>\n                <Switch>\n                  <Route exact path={process.env.PUBLIC_URL + '/'} component={Homepage} />\n                  <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login} />\n                  <Route exact path={process.env.PUBLIC_URL + '/kitchen'} component={Kitchen} />\n                  <Route exact path={process.env.PUBLIC_URL + '/table'} component={Table} />\n                  <Route exact path={`${process.env.PUBLIC_URL}/table/booking/:id`} component={Booking} />\n                  <Route exact path={`${process.env.PUBLIC_URL}/table/booking/new`} component = {Booking}/>\n                  <Route exact path={`${process.env.PUBLIC_URL}/table/events/:id`} component = {Events}/>\n                  <Route exact path={`${process.env.PUBLIC_URL}/table/events/new`} component = {Events}/>\n                  <Route exact path={`${process.env.PUBLIC_URL}/waiter`} component={Waiter} />\n                  <Route exact path={`${process.env.PUBLIC_URL}/waiter/order/:id`} component={Order} />\n                  <Route exact path={`${process.env.PUBLIC_URL}/waiter/order/new`} component={Order} />\n                </Switch>\n              </MainLayout>\n            </ThemeProvider>\n          </StylesProvider>\n        </BrowserRouter>\n      \n      </div>\n    </Provider>\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'node-thermal-printer';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Table_component__1yIMT\",\"datepicker\":\"Table_datepicker__6S2Vw\",\"hour\":\"Table_hour__3VZdG\",\"table\":\"Table_table__f1NJg\",\"link\":\"Table_link__1NP1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"PageNav_component__be9R0\",\"link\":\"PageNav_link__2WbXc\"};"],"sourceRoot":""}